'''
命名空间:从名称到对象的映射
大部分的命名空间都是通过 Python 字典来实现的
*在项目中避免名字冲突的一种方法

1.内置名称
2.全局名称
3.局部名称

命名空间查找顺序:

假设我们要使用变量 runoob
Python查找顺序为：
    局部的命名空间 -> 全局命名空间 -> 内置命名空间




作用域:程序可以直接访问命名空间的正文区域
1.L（Local）：最内层，包含局部变量，比如一个函数/方法内部
2.E（Enclosing）：包含了非局部(non-local)也非全局(non-global)的变量
                比如两个嵌套函数，一个函数（或类） A 里面又包含了一个函数 B 
                那么对于 B 中的名称来说 A 中的作用域就为 nonlocal
3.G（Global）：当前脚本的最外层，比如当前模块的全局变量
4.B（Built-in）： 包含了内建的变量/关键字等，最后被搜索

global 和 nonlocal关键字:当内部作用域修改外部作用域的变量时
    ex:
        num = 1
    def fun1():
        global num  # 需要使用 global 关键字声明
        print(num) 
        num = 123
        print(num)
    fun1()
    print(num)
    >>> 1 123 123
'''